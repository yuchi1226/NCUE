1.
{
    1. `lw $s1, 0($t1)`：將記憶體地址 3000 的內容（2000）讀取到寄存器 `$s1` 中。

    2. `sub $s2, $s2, $s2`：將寄存器 `$s2` 的值設置為零。

    3. `add $s2, $2, 100`：將寄存器 `$2` 的值和立即數 100 相加，然後將結果（值為 100）存儲到寄存器 `$s2` 中。

    4. `lw $s1, 0($s1)`：將記憶體地址 2000 的內容（4）讀取到寄存器 `$s1` 中。

    5. `add $s1, $s1, $s2`：將寄存器 `$s1` 的值（4）和寄存器 `$s2` 的值（100）相加，然後將結果（104）存儲到寄存器 `$s1` 中。

    6. `lw $s3, 0($t2)`：將記憶體地址 3004 的內容（1000）讀取到寄存器 `$s3` 中。

    7. `add $s3, $s3, $s2`：將寄存器 `$s3` 的值（1000）和寄存器 `$s2` 的值（100）相加，然後將結果（1100）存儲到寄存器 `$s3` 中。

    8. `sw $s3, 4($sl)`：將寄存器 `$s3` 的值（1100）寫入到記憶體地址 3000 + 4 = 3004 的地方。

    9. `sw $s1, 0($s1)`：將寄存器 `$s1` 的值（104）寫入到記憶體地址 3000 的地方。

    | memory address | content |
    | 1000           | 3000    |
    | 1004           | 4       |
    | ......         | ......  |
    | 2000           | 4       |
    | 2004           | 1000    |
    | ......         | ......  |
    | 3000           | 104     |
    | 3004           | 1100    |
    | ......         | ......  |
}
2.
{
    (a)
        (1)immediate=2^16-1，即 65535
        (2)displacement=-2^(n-1)~2^(n-1)-1,n is the number of bits for the displacement field.
        (3)PC-related=(-2^15)~(2^15-1)
    
    (b)
        (1)R-type
        (2)I-type
        (3)I-type
}
3.
{

}
4.
{
    (1)add是有符号数加法，addu是"无符号数"加法
        s3=0X40000001
        s4=0Xbfffffff
    
    (2)一顆 1 位元全加器有三個輸入：加數 A、加數 B 和進位輸入 Cin，以及兩個輸出：進位輸出 Cout 和和輸出 Sum。

    Cout 的邏輯函數如下： Cout = AB + AB * Cin 
    Sum  的邏輯函數如下： Sum = A + B + Cin

    4個1-bit的加法器組成4-bit的加法器，再將8個4-it的加法器組成32-bit的加法器

}
5.
{
    (1) a)7
    (2) b)2000.0000002 (2.0e-6 = 2.0*10 的-6 次方)
    (3) c)true
}
6.
{
    Ans: 3 1 13
}
7.
{
    
    
}